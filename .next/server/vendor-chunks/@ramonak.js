"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ramonak";
exports.ids = ["vendor-chunks/@ramonak"];
exports.modules = {

/***/ "(ssr)/./node_modules/@ramonak/react-progress-bar/dist/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ramonak/react-progress-bar/dist/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar PropTypes = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function(k) {\n            if (k !== \"default\") {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function() {\n                        return e[k];\n                    }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\nvar React__namespace = /*#__PURE__*/ _interopNamespace(React);\nvar PropTypes__namespace = /*#__PURE__*/ _interopNamespace(PropTypes);\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar ProgressBar = function(_a) {\n    var _b = _a.bgColor, bgColor = _b === void 0 ? \"#6a1b9a\" : _b, _c = _a.height, height = _c === void 0 ? \"20px\" : _c, _d = _a.width, width = _d === void 0 ? \"100%\" : _d, _e = _a.borderRadius, borderRadius = _e === void 0 ? \"50px\" : _e, _f = _a.labelAlignment, labelAlignment = _f === void 0 ? \"right\" : _f, _g = _a.baseBgColor, baseBgColor = _g === void 0 ? \"#e0e0de\" : _g, _h = _a.labelColor, labelColor = _h === void 0 ? \"#fff\" : _h, _j = _a.labelSize, labelSize = _j === void 0 ? \"15px\" : _j, _k = _a.isLabelVisible, isLabelVisible = _k === void 0 ? true : _k, _l = _a.dir, dir = _l === void 0 ? \"ltr\" : _l, _m = _a.ariaValuemin, ariaValuemin = _m === void 0 ? 0 : _m, _o = _a.ariaValuemax, ariaValuemax = _o === void 0 ? 100 : _o, _p = _a.ariaValuetext, ariaValuetext = _p === void 0 ? null : _p, _q = _a.maxCompleted, maxCompleted = _q === void 0 ? 100 : _q, _r = _a.animateOnRender, animateOnRender = _r === void 0 ? false : _r, _s = _a.initCompletedOnAnimation, initCompletedOnAnimation = _s === void 0 ? 0 : _s, completed = _a.completed, margin = _a.margin, padding = _a.padding, customLabelStyles = _a.customLabelStyles, transitionDuration = _a.transitionDuration, transitionTimingFunction = _a.transitionTimingFunction, className = _a.className, customLabel = _a.customLabel, barContainerClassName = _a.barContainerClassName, completedClassName = _a.completedClassName, labelClassName = _a.labelClassName;\n    var getAlignment = function(alignmentOption) {\n        if (alignmentOption === \"left\") {\n            return \"flex-start\";\n        } else if (alignmentOption === \"center\") {\n            return \"center\";\n        } else if (alignmentOption === \"right\") {\n            return \"flex-end\";\n        } else {\n            return null;\n        }\n    };\n    var alignment = getAlignment(labelAlignment);\n    var initCompletedOnAnimationStr = typeof initCompletedOnAnimation === \"number\" ? \"\".concat(initCompletedOnAnimation, \"%\") : initCompletedOnAnimation;\n    var getFillerWidth = function(maxCompletedValue, completedValue) {\n        if (maxCompletedValue) {\n            var ratio = Number(completedValue) / maxCompletedValue;\n            return ratio > 1 ? \"100%\" : \"\".concat(ratio * 100, \"%\");\n        }\n        return initCompletedOnAnimationStr;\n    };\n    var fillerWidth = getFillerWidth(maxCompleted, completed);\n    var _t = React__namespace.useState(initCompletedOnAnimationStr), initWidth = _t[0], setInitWidth = _t[1];\n    var containerStyles = {\n        height: height,\n        background: baseBgColor,\n        borderRadius: borderRadius,\n        padding: padding,\n        width: width,\n        margin: margin,\n        overflow: \"hidden\"\n    };\n    var fillerStyles = {\n        height: height,\n        width: animateOnRender ? initWidth : fillerWidth,\n        background: bgColor,\n        transition: \"width \".concat(transitionDuration || \"1s\", \" \").concat(transitionTimingFunction || \"ease-in-out\"),\n        borderRadius: \"inherit\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: labelAlignment !== \"outside\" && alignment ? alignment : \"normal\"\n    };\n    var labelStyles = __assign({\n        padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\n        color: labelColor,\n        fontWeight: \"bold\",\n        fontSize: labelSize,\n        display: !isLabelVisible ? \"none\" : \"initial\"\n    }, customLabelStyles);\n    var outsideStyles = {\n        display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\n        alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\"\n    };\n    var completedStr = typeof completed === \"number\" ? \"\".concat(completed, \"%\") : \"\".concat(completed);\n    var labelStr = customLabel ? customLabel : completedStr;\n    React__namespace.useEffect(function() {\n        if (animateOnRender) {\n            requestAnimationFrame(function() {\n                return setInitWidth(fillerWidth);\n            });\n        }\n    }, [\n        fillerWidth,\n        animateOnRender\n    ]);\n    return React__namespace.createElement(\"div\", {\n        style: className ? undefined : outsideStyles,\n        className: className,\n        dir: dir,\n        role: \"progressbar\",\n        \"aria-valuenow\": parseFloat(labelStr),\n        \"aria-valuemin\": ariaValuemin,\n        \"aria-valuemax\": ariaValuemax,\n        \"aria-valuetext\": \"\".concat(ariaValuetext === null ? labelStr : ariaValuetext)\n    }, React__namespace.createElement(\"div\", {\n        style: barContainerClassName ? undefined : containerStyles,\n        className: barContainerClassName\n    }, React__namespace.createElement(\"div\", {\n        style: completedClassName ? undefined : fillerStyles,\n        className: completedClassName\n    }, labelAlignment !== \"outside\" && React__namespace.createElement(\"span\", {\n        style: labelClassName ? undefined : labelStyles,\n        className: labelClassName\n    }, labelStr))), labelAlignment === \"outside\" && React__namespace.createElement(\"span\", {\n        style: labelClassName ? undefined : labelStyles,\n        className: labelClassName\n    }, labelStr));\n};\nProgressBar.propTypes = {\n    completed: PropTypes__namespace.oneOfType([\n        PropTypes__namespace.string,\n        PropTypes__namespace.number\n    ]).isRequired,\n    bgColor: PropTypes__namespace.string,\n    baseBgColor: PropTypes__namespace.string,\n    height: PropTypes__namespace.string,\n    width: PropTypes__namespace.string,\n    borderRadius: PropTypes__namespace.string,\n    margin: PropTypes__namespace.string,\n    padding: PropTypes__namespace.string,\n    labelAlignment: PropTypes__namespace.oneOf([\n        \"left\",\n        \"center\",\n        \"right\",\n        \"outside\"\n    ]),\n    labelColor: PropTypes__namespace.string,\n    labelSize: PropTypes__namespace.string,\n    isLabelVisible: PropTypes__namespace.bool,\n    className: PropTypes__namespace.string,\n    dir: PropTypes__namespace.oneOf([\n        \"rtl\",\n        \"ltr\",\n        \"auto\"\n    ]),\n    maxCompleted: PropTypes__namespace.number,\n    customLabel: PropTypes__namespace.string,\n    animateOnRender: PropTypes__namespace.bool,\n    barContainerClassName: PropTypes__namespace.string,\n    completedClassName: PropTypes__namespace.string,\n    labelClassName: PropTypes__namespace.string,\n    initCompletedOnAnimation: PropTypes__namespace.oneOfType([\n        PropTypes__namespace.string,\n        PropTypes__namespace.number\n    ])\n};\nexports[\"default\"] = ProgressBar; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ramonak/react-progress-bar/dist/index.js\n");

/***/ })

};
;